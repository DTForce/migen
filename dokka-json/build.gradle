import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
	ext {
		dokkaVersion = '1.9.20'
	}
	repositories {
		mavenCentral()
	}
}

plugins {
	id("java")
	id("java-library")
	id "org.jetbrains.kotlin.jvm" version "1.9.23"
//	id("org.jetbrains.dokka") version "1.9.20"
}

group = 'com.dtforce.migen'
version = System.getenv("PROJECT_VERSION") ?: 'latest'

repositories {
	mavenCentral()
}

dependencies {
	compileOnly("org.jetbrains.dokka:dokka-core:$dokkaVersion")
	implementation("org.jetbrains.dokka:dokka-base:$dokkaVersion")
	implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0")
	implementation 'com.fasterxml.jackson.core:jackson-core:2.16.+'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.16.+'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.+'
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.16.+"

	implementation(project(":dokka-json-reader"))

	testImplementation 'org.jetbrains.kotlin:kotlin-test'
	testImplementation("org.jetbrains.dokka:dokka-test-api:$dokkaVersion")
	testImplementation("org.jetbrains.dokka:dokka-base-test-utils:$dokkaVersion")
	testImplementation(project(":migen"))

	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.withType(KotlinCompile).configureEach {
	compilerOptions.jvmTarget.set(JvmTarget.JVM_17)
}

test {
	useJUnitPlatform()
}
